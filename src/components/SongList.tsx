import React, { useState } from 'react';
import { Song } from '../types';
import { Clock, Music, User, Disc, Calendar, FileText, Youtube, ExternalLink } from 'lucide-react';

interface SongListProps {
  songs: Song[];
  genre: string;
  onUpdateSong: (updatedSong: Song) => void;
  onFetchSongDetails: (song: Song) => Promise<Song>;
  selectedModel: string;
}

const SongList: React.FC<SongListProps> = ({ songs, genre, onUpdateSong, onFetchSongDetails, selectedModel }) => {
  const [expandedSongId, setExpandedSongId] = useState<string | null>(null);
  const [loadingSongId, setLoadingSongId] = useState<string | null>(null);

  const handleSongClick = async (song: Song) => {
    if (expandedSongId === song.id) {
      setExpandedSongId(null);
      return;
    }
    
    setExpandedSongId(song.id);
    
    // If we don't have details yet, fetch them
    if (!song.album) {
      setLoadingSongId(song.id);
      try {
        await onFetchSongDetails(song);
      } finally {
        setLoadingSongId(null);
      }
    }
  };

  if (songs.length === 0) {
    return null;
  }

  return (
    <div className="w-full max-w-4xl bg-white rounded-lg shadow-lg overflow-hidden">
      <div className="p-6 border-b border-gray-200">
        <div className="flex justify-between items-center">
          <div>
            <h2 className="text-2xl font-bold text-gray-800 flex items-center">
              <Music className="h-6 w-6 text-indigo-600 mr-2" />
              {genre} Playlist
            </h2>
            <p className="text-gray-600 mt-1">
              {songs.length} songs generated by AI using {selectedModel}
            </p>
          </div>
        </div>
      </div>
      
      <ul className="divide-y divide-gray-200">
        {songs.map((song, index) => {
          // Create search queries for each song
          const songQuery = `${song.title} ${song.artist}`;
          const youtubeUrl = `https://www.youtube.com/results?search_query=${encodeURIComponent(songQuery)}`;
          const spotifyUrl = `https://open.spotify.com/search/${encodeURIComponent(songQuery)}`;
          const appleMusicUrl = `https://music.apple.com/us/search?term=${encodeURIComponent(songQuery)}`;
          const youtubeMusicUrl = `https://music.youtube.com/search?q=${encodeURIComponent(songQuery)}`;
          const amazonMusicUrl = `https://music.amazon.com/search/${encodeURIComponent(songQuery)}`;
          
          return (
            <li 
              key={song.id}
              className={`hover:bg-gray-50 transition ${
                expandedSongId === song.id ? 'bg-indigo-50' : ''
              }`}
            >
              <div className="p-4 sm:px-6">
                <div className="flex items-center justify-between">
                  <div 
                    className="flex items-center flex-grow cursor-pointer" 
                    onClick={() => handleSongClick(song)}
                  >
                    <span className="w-8 text-center text-gray-500 font-medium">{index + 1}</span>
                    <div className="ml-4">
                      <h3 className="text-lg font-medium text-gray-900">{song.title}</h3>
                      <p className="text-sm text-gray-500 flex items-center">
                        <User className="h-3 w-3 mr-1" />
                        {song.artist}
                      </p>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-3">
                    {song.duration && (
                      <span className="text-sm text-gray-500 flex items-center mr-3">
                        <Clock className="h-3 w-3 mr-1" />
                        {song.duration}
                      </span>
                    )}
                    
                    {/* Music service links */}
                    <a
                      href={youtubeUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-red-600 hover:text-red-800 transition"
                      title={`Find "${song.title}" on YouTube`}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <Youtube className="h-5 w-5" />
                    </a>
                    
                    {/* YouTube Music */}
                    <a
                      href={youtubeMusicUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-red-500 hover:text-red-700 transition"
                      title={`Find "${song.title}" on YouTube Music`}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0C5.376 0 0 5.376 0 12s5.376 12 12 12 12-5.376 12-12S18.624 0 12 0zm0 19.104c-3.924 0-7.104-3.18-7.104-7.104S8.076 4.896 12 4.896s7.104 3.18 7.104 7.104-3.18 7.104-7.104 7.104zm0-13.332c-3.432 0-6.228 2.796-6.228 6.228S8.568 18.228 12 18.228s6.228-2.796 6.228-6.228S15.432 5.772 12 5.772zM9.684 15.54V8.46L16.2 12l-6.516 3.54z"/>
                      </svg>
                    </a>
                    
                    {/* Spotify */}
                    <a
                      href={spotifyUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-green-600 hover:text-green-800 transition"
                      title={`Find "${song.title}" on Spotify`}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.419 1.56-.299.421-1.02.599-1.559.3z"/>
                      </svg>
                    </a>
                    
                    {/* Apple Music - Updated icon */}
                    <a
                      href={appleMusicUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-pink-600 hover:text-pink-800 transition"
                      title={`Find "${song.title}" on Apple Music`}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <svg className="h-5 w-5" viewBox="0 0 98 98" fill="currentColor">
                        <path d="M49 0a49 49 0 1 0 0 98 49 49 0 0 0 0-98zm0 2a47 47 0 1 1 0 94 47 47 0 0 1 0-94z" fill="currentColor" fillOpacity=".3"/>
                        <path d="M49 2a47 47 0 1 0 0 94 47 47 0 0 0 0-94zm0 1.5c25.1 0 45.5 20.4 45.5 45.5S74.1 94.5 49 94.5 3.5 74.1 3.5 49 23.9 3.5 49 3.5z" fill="currentColor" fillOpacity=".3"/>
                        <path d="M67.3 26.4c-.3.1-.6.3-.8.5-1.9 1.2-3 2.9-3.3 5.2-.3 2.6.7 4.7 2.8 6.3.7.6 1.6 1 2.4 1.5l-.3.4c-.9 1.5-1.8 3-2.8 4.4-1.5 2.1-3.3 4-5.6 5.4-1.1.7-2.3 1.3-3.6 1.5-1.3.2-2.6.1-3.8-.4-1-.4-1.8-1-2.7-1.5-1.7-1-3.6-1.5-5.5-1.1-1.9.3-3.5 1.1-5 2.3-.4.3-.7.7-1.1 1-.1.1-.2.1-.3.1-.1-.1-.1-.2-.1-.3.1-.7.3-1.3.5-2 .7-2.3 1.8-4.4 3.3-6.3.8-1 1.7-1.9 2.7-2.7 1.3-1 2.7-1.7 4.3-2 1.3-.3 2.6-.3 3.9.1 1 .3 1.9.8 2.8 1.2.6.3 1.2.6 1.9.8 1.3.4 2.6.3 3.8-.3 1.1-.5 2-1.2 2.9-2 .5-.5 1-1 1.4-1.5.8-1.1 1.6-2.1 2.3-3.3.5-.8.9-1.6 1.3-2.5.3-.7.5-1.5.8-2.2.1-.2.1-.4.2-.6 0-.1.1-.1.2-.1-.1.1-.1.2-.2.3z"/>
                        <path d="M49.8 14.5c2.1.1 4 .7 5.8 1.9 1.4.9 2.5 2.1 3.3 3.5.3.5.6 1.1.8 1.7.1.2.1.3-.1.5-.1.1-.2.2-.3.3-1.9 1.4-3.1 3.1-3.5 5.4-.4 2.3.3 4.3 1.8 6.1.1.1.2.2.3.3.1.1.1.2 0 .3-.1.2-.3.4-.4.6-1.1 1.7-2.1 3.4-3.4 5-1.2 1.5-2.6 2.8-4.2 3.9-1.2.8-2.4 1.5-3.8 1.9-1.6.5-3.2.6-4.8.1-1.1-.3-2.2-.8-3.2-1.4-.9-.5-1.9-.9-2.9-1.2-1.4-.3-2.8-.2-4.2.2-1.4.5-2.7 1.2-3.8 2.1-.8.6-1.5 1.3-2.1 2-.1.1-.2.2-.3.2-.1 0-.2-.1-.2-.2 0-.1.1-.3.1-.4.5-1.2 1-2.4 1.7-3.5 1.2-2 2.7-3.7 4.5-5.1 1.3-1 2.7-1.8 4.3-2.3 1.2-.4 2.4-.5 3.7-.4 1.2.1 2.3.5 3.4 1 1 .5 2 .9 3.1 1.3 1 .3 2 .4 3 .2 1.1-.2 2.1-.7 3-1.3 1.1-.8 2.1-1.7 2.9-2.7.8-1 1.5-2 2.2-3.1.7-1.2 1.3-2.5 1.8-3.8.4-1.1.8-2.2 1-3.4.1-.6.2-1.2.2-1.8v-.5c-.1-.1 0-.2.1-.2.1.1.1.1.1.2z"/>
                      </svg>
                    </a>
                    
                    {/* Amazon Music */}
                    <a
                      href={amazonMusicUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-600 hover:text-blue-800 transition"
                      title={`Find "${song.title}" on Amazon Music`}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M23.0967 17.0001C20.8483 18.6621 17.7621 19.6667 15.0482 19.6667C11.1166 19.6667 7.58483 18.0047 5.01201 15.2954C4.80282 15.0667 4.99241 14.7714 5.24121 14.9334C7.93552 16.5287 11.2395 17.4667 14.6661 17.4667C16.9811 17.4667 19.5539 16.9621 21.8689 15.9574C22.2511 15.7954 22.5664 16.2334 23.0967 17.0001Z"/>
                        <path d="M24 17.3334C23.7513 17.6287 22.2176 17.4667 21.5392 17.3714C21.2905 17.3334 21.2574 17.1047 21.4801 16.9427C22.6486 16.1094 24.5742 16.3381 24.7969 16.5667C25.0195 16.7954 24.6704 18.8667 23.5681 19.7954C23.3455 19.9954 23.1228 19.8954 23.2135 19.6667C23.4693 19.0667 24.2484 17.6287 24 17.3334Z"/>
                        <path d="M21.5061 5.33335V4.06669C21.5061 3.82669 21.5061 3.66669 21.3165 3.50669C21.1268 3.38669 20.9371 3.38669 20.7474 3.38669H19.5093H18.9402H17.7021C17.5124 3.38669 17.3227 3.38669 17.1701 3.50669C16.9804 3.62669 16.9804 3.82669 16.9804 4.06669V5.33335V6.60002C16.9804 6.84002 17.1701 7.00002 17.4227 7.00002H18.6608C18.9134 7.00002 19.1031 6.84002 19.1031 6.60002V5.93335H20.7474V6.60002C20.7474 6.84002 20.9371 7.00002 21.1897 7.00002H22.4278C22.6804 7.00002 22.8701 6.84002 22.8701 6.60002V5.33335V4.06669C22.8701 3.82669 22.6804 3.66669 22.4278 3.66669H21.1897C20.9371 3.66669 20.7474 3.82669 20.7474 4.06669V4.73335H19.1031V4.06669C19.1031 3.82669 18.9134 3.66669 18.6608 3.66669H17.4227C17.1701 3.66669 16.9804 3.82669 16.9804 4.06669V5.33335H21.5061Z"/>
                        <path d="M9.32163 5.33335V4.06669C9.32163 3.82669 9.32163 3.66669 9.13195 3.50669C8.94226 3.38669 8.75258 3.38669 8.5629 3.38669H7.32476H6.75569H5.51754C5.32786 3.38669 5.13818 3.38669 4.98556 3.50669C4.79588 3.62669 4.79588 3.82669 4.79588 4.06669V5.33335V6.60002C4.79588 6.84002 4.98556 7.00002 5.23818 7.00002H6.47633C6.72894 7.00002 6.91863 6.84002 6.91863 6.60002V5.93335H8.5629V6.60002C8.5629 6.84002 8.75258 7.00002 9.0052 7.00002H10.2433C10.496 7.00002 10.6856 6.84002 10.6856 6.60002V5.33335V4.06669C10.6856 3.82669 10.496 3.66669 10.2433 3.66669H9.0052C8.75258 3.66669 8.5629 3.82669 8.5629 4.06669V4.73335H6.91863V4.06669C6.91863 3.82669 6.72894 3.66669 6.47633 3.66669H5.23818C4.98556 3.66669 4.79588 3.82669 4.79588 4.06669V5.33335H9.32163Z"/>
                        <path d="M14.6392 3.38669H13.4011C13.1485 3.38669 12.9588 3.54669 12.9588 3.78669V7.00002H14.6392V3.78669C14.6392 3.54669 14.4495 3.38669 14.1969 3.38669"/>
                        <path d="M3.17526 7.00002H4.41341C4.66603 7.00002 4.85571 6.84002 4.85571 6.60002V3.78669C4.85571 3.54669 4.66603 3.38669 4.41341 3.38669H3.17526C2.92265 3.38669 2.73297 3.54669 2.73297 3.78669V6.60002C2.73297 6.84002 2.92265 7.00002 3.17526 7.00002Z"/>
                        <path d="M2 9.00002C2 9.24002 2.18968 9.40002 2.4423 9.40002H3.68045C3.93306 9.40002 4.12274 9.24002 4.12274 9.00002V8.20002C4.12274 7.96002 3.93306 7.80002 3.68045 7.80002H2.4423C2.18968 7.80002 2 7.96002 2 8.20002V9.00002Z"/>
                        <path d="M12.9588 9.00002C12.9588 9.24002 13.1485 9.40002 13.4011 9.40002H14.6392C14.8919 9.40002 15.0815 9.24002 15.0815 9.00002V8.20002C15.0815 7.96002 14.8919 7.80002 14.6392 7.80002H13.4011C13.1485 7.80002 12.9588 7.96002 12.9588 8.20002V9.00002Z"/>
                        <path d="M4.79588 9.00002C4.79588 9.24002 4.98556 9.40002 5.23818 9.40002H6.47633C6.72894 9.40002 6.91863 9.24002 6.91863 9.00002V8.20002C6.91863 7.96002 6.72894 7.80002 6.47633 7.80002H5.23818C4.98556 7.80002 4.79588 7.96002 4.79588 8.20002V9.00002Z"/>
                        <path d="M7.59143 9.00002C7.59143 9.24002 7.78111 9.40002 8.03373 9.40002H9.27188C9.52449 9.40002 9.71417 9.24002 9.71417 9.00002V8.20002C9.71417 7.96002 9.52449 7.80002 9.27188 7.80002H8.03373C7.78111 7.80002 7.59143 7.96002 7.59143 8.20002V9.00002Z"/>
                        <path d="M10.387 9.00002C10.387 9.24002 10.5767 9.40002 10.8293 9.40002H12.0674C12.3201 9.40002 12.5097 9.24002 12.5097 9.00002V8.20002C12.5097 7.96002 12.3201 7.80002 12.0674 7.80002H10.8293C10.5767 7.80002 10.387 7.96002 10.387 8.20002V9.00002Z"/>
                        <path d="M15.7163 9.00002C15.7163 9.24002 15.906 9.40002 16.1586 9.40002H17.3968C17.6494 9.40002 17.8391 9.24002 17.8391 9.00002V8.20002C17.8391 7.96002 17.6494 7.80002 17.3968 7.80002H16.1586C15.906 7.80002 15.7163 7.96002 15.7163 8.20002V9.00002Z"/>
                        <path d="M18.5119 9.00002C18.5119 9.24002 18.7016 9.40002 18.9542 9.40002H20.1923C20.4449 9.40002 20.6346 9.24002 20.6346 9.00002V8.20002C20.6346 7.96002 20.4449 7.80002 20.1923 7.80002H18.9542C18.7016 7.80002 18.5119 7.96002 18.5119 8.20002V9.00002Z"/>
                        <path d="M21.3075 9.00002C21.3075 9.24002 21.4972 9.40002 21.7498 9.40002H22.9879C23.2406 9.40002 23.4302 9.24002 23.4302 9.00002V8.20002C23.4302 7.96002 23.2406 7.80002 22.9879 7.80002H21.7498C21.4972 7.80002 21.3075 7.96002 21.3075 8.20002V9.00002Z"/>
                        <path d="M16.9804 7.00002H18.2186C18.4712 7.00002 18.6608 6.84002 18.6608 6.60002V3.78669C18.6608 3.54669 18.4712 3.38669 18.2186 3.38669H16.9804C16.7278 3.38669 16.5381 3.54669 16.5381 3.78669V6.60002C16.5381 6.84002 16.7278 7.00002 16.9804 7.00002Z"/>
                        <path d="M11.3278 3.38669H10.0897C9.83711 3.38669 9.64743 3.54669 9.64743 3.78669V7.00002H11.3278V3.78669C11.3278 3.54669 11.1381 3.38669 10.8855 3.38669"/>
                      </svg>
                    </a>
                  </div>
                </div>
                
                {expandedSongId === song.id && (
                  <div className="mt-4 pl-12 pr-4 pb-2 text-sm">
                    {loadingSongId === song.id ? (
                      <div className="flex justify-center py-4">
                        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-indigo-600"></div>
                      </div>
                    ) : (
                      <div className="space-y-3">
                        {song.album && (
                          <p className="text-gray-700 flex items-center">
                            <Disc className="h-4 w-4 text-indigo-500 mr-2" />
                            <span className="font-medium mr-1">Album:</span> {song.album}
                          </p>
                        )}
                        
                        {song.year && (
                          <p className="text-gray-700 flex items-center">
                            <Calendar className="h-4 w-4 text-indigo-500 mr-2" />
                            <span className="font-medium mr-1">Year:</span> {song.year}
                          </p>
                        )}
                        
                        {song.lyrics && (
                          <div className="mt-3">
                            <p className="text-gray-700 flex items-center mb-2">
                              <FileText className="h-4 w-4 text-indigo-500 mr-2" />
                              <span className="font-medium">Lyrics:</span>
                            </p>
                            <div className="pl-6 italic text-gray-600 whitespace-pre-line">
                              {song.lyrics}
                            </div>
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                )}
              </div>
            </li>
          );
        })}
      </ul>
    </div>
  );
}

export default SongList;
